trigger:
  - main

variables:
  pythonVersion: '3.12'
  webAppName: 'prediction-time-api-v1'
  environmentName: 'production'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        architecture: 'x64'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    # Create web.config file
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $webConfig = @"
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="PythonHandler" path="*" verb="*" modules="FastCgiModule" scriptProcessor="D:\Python312\python.exe|D:\Python312\Lib\site-packages\wfastcgi.py" resourceType="Unspecified" requireAccess="Script" />
              </handlers>
            </system.webServer>
            <appSettings>
              <add key="PYTHONPATH" value="D:\home\site\wwwroot" />
              <add key="WSGI_HANDLER" value="app.app" />
              <add key="WSGI_LOG" value="D:\home\LogFiles\wfastcgi.log" />
            </appSettings>
          </configuration>
          "@
          $webConfig | Out-File -FilePath "$(Build.ArtifactStagingDirectory)\web.config" -Encoding UTF8
      displayName: 'Create web.config'

    # Copy necessary files for deployment
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.py
          requirements.txt
          .env.example
          features/.gitkeep
          training_data/.gitkeep
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy deployment files'

    # Archive the files
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive files'

    # Publish the artifact
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish artifact'

- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'PredictionTimeAzure'  # Update this
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              startUpCommand: 'gunicorn --bind=0.0.0.0 --timeout 600 app:app'